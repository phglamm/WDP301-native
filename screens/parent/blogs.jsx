import React, { useState } from 'react';
import {
  View,
  Text,
  ScrollView,
  TextInput,
  TouchableOpacity,
  Image,
  RefreshControl,
  StatusBar,
  Dimensions,
  Platform,
  KeyboardAvoidingView,
} from 'react-native';
import {
  Search,
  BookOpen,
  Heart,
  Clock,
  TrendingUp,
  Bookmark,
  Share2,
  MessageCircle,
  Filter,
  Star,
  Eye,
  Calendar,
  ArrowLeft,
} from 'lucide-react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import HeaderIcon from '../../components/layouts/HeaderIcon';
import { useRouter } from 'expo-router';
import { Ionicons } from '@expo/vector-icons';
import ParentHeader from '../../components/layouts/ParentHeader';

const { width } = Dimensions.get('window');

const DUMMY_POSTS = [
  {
    id: 1,
    title: 'C√°ch Gi·ªØ G√¨n S·ª©c Kh·ªèe Trong M√πa Thi',
    description:
      'Nh·ªØng b√≠ quy·∫øt ƒë∆°n gi·∫£n gi√∫p h·ªçc sinh duy tr√¨ s·ª©c kh·ªèe t·ªët trong th·ªùi gian √¥n thi. Bao g·ªìm ch·∫ø ƒë·ªô ƒÉn u·ªëng, ngh·ªâ ng∆°i v√† t·∫≠p th·ªÉ d·ª•c ph√π h·ª£p.',
    image: 'https://picsum.photos/400/300?random=1',
    date: '20/03/2024',
    readTime: 5,
    views: 1234,
    likes: 89,
    comments: 23,
    tags: ['S·ª©c kh·ªèe h·ªçc ƒë∆∞·ªùng', 'M√πa thi', 'Stress'],
    category: 'study',
    author: 'BS. Nguy·ªÖn Th·ªã Lan',
    isFeatured: true,
  },
  {
    id: 2,
    title: 'Dinh D∆∞·ª°ng Cho H·ªçc Sinh Ph√°t Tri·ªÉn',
    description:
      'Ch·∫ø ƒë·ªô ƒÉn u·ªëng khoa h·ªçc gi√∫p tƒÉng c∆∞·ªùng tr√≠ nh·ªõ v√† t·∫≠p trung. Nh·ªØng th·ª±c ph·∫©m b·ªï n√£o cho h·ªçc sinh.',
    image: 'https://picsum.photos/400/300?random=2',
    date: '19/03/2024',
    readTime: 7,
    views: 856,
    likes: 45,
    comments: 12,
    tags: ['Dinh d∆∞·ª°ng', 'H·ªçc t·∫≠p', 'B·ªï n√£o'],
    category: 'nutrition',
    author: 'TS. L√™ VƒÉn Minh',
    isFeatured: false,
  },
  {
    id: 3,
    title: 'Qu·∫£n L√Ω Stress V√† √Åp L·ª±c H·ªçc T·∫≠p',
    description:
      'C√°ch nh·∫≠n bi·∫øt v√† x·ª≠ l√Ω stress hi·ªáu qu·∫£. Nh·ªØng k·ªπ thu·∫≠t th∆∞ gi√£n ƒë∆°n gi·∫£n cho h·ªçc sinh.',
    image: 'https://picsum.photos/400/300?random=3',
    date: '18/03/2024',
    readTime: 6,
    views: 1567,
    likes: 134,
    comments: 45,
    tags: ['T√¢m l√Ω', 'Stress', 'Th∆∞ gi√£n'],
    category: 'mental',
    author: 'ThS. Tr·∫ßn Th·ªã Mai',
    isFeatured: true,
  },
  {
    id: 4,
    title: 'T·∫ßm Quan Tr·ªçng C·ªßa Gi·∫•c Ng·ªß',
    description:
      'Gi·∫•c ng·ªß ƒë√≥ng vai tr√≤ quan tr·ªçng trong vi·ªác h·ªçc t·∫≠p v√† ph√°t tri·ªÉn c·ªßa h·ªçc sinh. C√°ch c·∫£i thi·ªán ch·∫•t l∆∞·ª£ng gi·∫•c ng·ªß.',
    image: 'https://picsum.photos/400/300?random=4',
    date: '17/03/2024',
    readTime: 4,
    views: 892,
    likes: 67,
    comments: 18,
    tags: ['Gi·∫•c ng·ªß', 'S·ª©c kh·ªèe', 'Ph√°t tri·ªÉn'],
    category: 'study',
    author: 'BS. Ph·∫°m VƒÉn ƒê·ª©c',
    isFeatured: false,
  },
  {
    id: 5,
    title: 'T·∫≠p Th·ªÉ D·ª•c Cho H·ªçc Sinh',
    description:
      'Nh·ªØng b√†i t·∫≠p th·ªÉ d·ª•c ƒë∆°n gi·∫£n c√≥ th·ªÉ th·ª±c hi·ªán t·∫°i nh√† ƒë·ªÉ duy tr√¨ s·ª©c kh·ªèe v√† tƒÉng c∆∞·ªùng s·ª± t·∫≠p trung.',
    image: 'https://picsum.photos/400/300?random=5',
    date: '16/03/2024',
    readTime: 8,
    views: 743,
    likes: 89,
    comments: 25,
    tags: ['Th·ªÉ d·ª•c', 'S·ª©c kh·ªèe', 'T·∫°i nh√†'],
    category: 'study',
    author: 'HLV. Ho√†ng Th·ªã Lan',
    isFeatured: false,
  },
];

const TABS = [
  { id: 'all', label: 'T·∫•t c·∫£', icon: BookOpen, color: '#3B82F6' },
  { id: 'study', label: 'H·ªçc t·∫≠p', icon: BookOpen, color: '#10B981' },
  { id: 'nutrition', label: 'Dinh d∆∞·ª°ng', icon: TrendingUp, color: '#F59E0B' },
  { id: 'mental', label: 'T√¢m l√Ω', icon: Heart, color: '#EF4444' },
  { id: 'saved', label: 'ƒê√£ l∆∞u', icon: Bookmark, color: '#8B5CF6' },
];

export default function Blogs() {
  const router = useRouter();
  const [refreshing, setRefreshing] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const [activeTab, setActiveTab] = useState('all');
  const [savedPosts, setSavedPosts] = useState([]);
  const [likedPosts, setLikedPosts] = useState([]);

  const handleRefresh = () => {
    setRefreshing(true);
    setTimeout(() => setRefreshing(false), 2000);
  };

  const handleToggleSave = (postId) => {
    setSavedPosts((prev) =>
      prev.includes(postId)
        ? prev.filter((id) => id !== postId)
        : [...prev, postId]
    );
  };

  const handleToggleLike = (postId) => {
    setLikedPosts((prev) =>
      prev.includes(postId)
        ? prev.filter((id) => id !== postId)
        : [...prev, postId]
    );
  };

  const handleNavigateToDetail = (post) => {
    console.log('Navigate to blog detail:', post.id);
  };

  const getFilteredPosts = () => {
    let filtered = DUMMY_POSTS;

    // Filter by category
    if (activeTab === 'saved') {
      filtered = filtered.filter((post) => savedPosts.includes(post.id));
    } else if (activeTab !== 'all') {
      filtered = filtered.filter((post) => post.category === activeTab);
    }

    // Filter by search query
    if (searchQuery.trim()) {
      filtered = filtered.filter(
        (post) =>
          post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
          post.description.toLowerCase().includes(searchQuery.toLowerCase()) ||
          post.tags.some((tag) =>
            tag.toLowerCase().includes(searchQuery.toLowerCase())
          )
      );
    }

    return filtered;
  };

  const filteredPosts = getFilteredPosts();
  const featuredPosts = DUMMY_POSTS.filter((post) => post.isFeatured);

  return (
    <SafeAreaView className='flex-1 bg-white dark:bg-gray-900'>
      <KeyboardAvoidingView
        className='flex-1 bg-white'
        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
      >
        {/* Header */}
        <ParentHeader
          title='B√†i vi·∫øt üìö'
          description='Chia s·∫ª ki·∫øn th·ª©c v√† kinh nghi·ªám'
          onBack={() => router.push('/home')}
        />
        {/* Tabs */}
        <View className='p-4 bg-white border-b border-gray-100'>
          {/* Tabs */}
          <ScrollView horizontal showsHorizontalScrollIndicator={false}>
            {TABS.map((tab) => {
              const Icon = tab.icon;
              const isActive = activeTab === tab.id;

              return (
                <TouchableOpacity
                  key={tab.id}
                  onPress={() => setActiveTab(tab.id)}
                  className={`mr-4 px-6 py-3 rounded-2xl flex-row items-center ${
                    isActive
                      ? 'bg-blue-500'
                      : 'bg-white border-2 border-gray-200'
                  }`}
                >
                  <Icon size={20} color={isActive ? '#fff' : tab.color} />
                  <Text
                    className={`ml-2 font-semibold ${
                      isActive ? 'text-white' : 'text-gray-700'
                    }`}
                  >
                    {tab.label}
                  </Text>
                  {activeTab === 'saved' && savedPosts.length > 0 && (
                    <View
                      className={`ml-2 rounded-full px-2 py-1 ${
                        isActive ? 'bg-white/20' : 'bg-blue-100'
                      }`}
                    >
                      <Text
                        className={`text-xs font-bold ${
                          isActive ? 'text-white' : 'text-blue-600'
                        }`}
                      >
                        {savedPosts.length}
                      </Text>
                    </View>
                  )}
                </TouchableOpacity>
              );
            })}
          </ScrollView>
        </View>
        {/* Main Content */}
        <ScrollView
          className='flex-1 px-4'
          refreshControl={
            <RefreshControl refreshing={refreshing} onRefresh={handleRefresh} />
          }
          showsVerticalScrollIndicator={false}
        >
          {/* Featured Posts Section */}
          {activeTab === 'all' && searchQuery.length === 0 && (
            <View className='mt-4 mb-6'>
              <Text className='mb-2 text-xl font-bold text-gray-800'>
                B√†i vi·∫øt n·ªïi b·∫≠t ‚≠ê
              </Text>
              <ScrollView
                horizontal
                showsHorizontalScrollIndicator={false}
                className='py-2'
              >
                {featuredPosts.map((post, index) => (
                  <TouchableOpacity
                    key={post.id}
                    className='overflow-hidden mr-4 bg-white rounded-3xl border border-gray-200'
                    style={{
                      width: width * 0.75,
                    }}
                    onPress={() => handleNavigateToDetail(post)}
                  >
                    <Image
                      source={{ uri: post.image }}
                      className='w-full h-40'
                      resizeMode='cover'
                    />
                    <View className='absolute top-3 right-3'>
                      <View className='px-3 py-1 bg-orange-500 rounded-full'>
                        <Text className='text-xs font-bold text-white'>
                          N·ªïi b·∫≠t
                        </Text>
                      </View>
                    </View>
                    <View className='p-4'>
                      <Text
                        className='mb-2 text-lg font-bold text-gray-800'
                        numberOfLines={2}
                      >
                        {post.title}
                      </Text>
                      <Text
                        className='mb-3 text-sm text-gray-600'
                        numberOfLines={2}
                      >
                        {post.description}
                      </Text>
                      <View className='flex-row justify-between items-center'>
                        <Text className='text-xs font-medium text-blue-600'>
                          {post.author}
                        </Text>
                        <View className='flex-row items-center'>
                          <Heart size={14} color='#EF4444' />
                          <Text className='ml-1 text-xs text-gray-500'>
                            {post.likes}
                          </Text>
                        </View>
                      </View>
                    </View>
                  </TouchableOpacity>
                ))}
              </ScrollView>
            </View>
          )}

          {/* Main Posts Grid */}
          <View>
            <View className='flex-row justify-between items-center mb-4'>
              <Text className='text-xl font-bold text-gray-800'>
                {activeTab === 'all'
                  ? 'T·∫•t c·∫£ b√†i vi·∫øt'
                  : activeTab === 'saved'
                  ? 'B√†i vi·∫øt ƒë√£ l∆∞u'
                  : TABS.find((tab) => tab.id === activeTab)?.label}
              </Text>
              <Text className='text-gray-500'>
                {filteredPosts.length} b√†i vi·∫øt
              </Text>
            </View>

            {filteredPosts.length === 0 ? (
              <View className='items-center py-20'>
                <BookOpen size={64} color='#D1D5DB' />
                <Text className='mt-4 mb-2 text-lg text-gray-500'>
                  {searchQuery
                    ? 'Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt ph√π h·ª£p'
                    : 'Ch∆∞a c√≥ b√†i vi·∫øt n√†o'}
                </Text>
                <Text className='px-8 text-center text-gray-400'>
                  {searchQuery
                    ? 'Th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c'
                    : 'H√£y quay l·∫°i sau ƒë·ªÉ xem th√™m b√†i vi·∫øt m·ªõi'}
                </Text>
              </View>
            ) : (
              <View className='flex-row flex-wrap justify-between'>
                {filteredPosts.map((post, index) => {
                  const isLiked = likedPosts.includes(post.id);
                  const isSaved = savedPosts.includes(post.id);

                  return (
                    <TouchableOpacity
                      key={post.id}
                      className='overflow-hidden mb-4 bg-white rounded-2xl'
                      style={{
                        width: (width - 48) / 2 - 8,
                        marginRight: index % 2 === 0 ? 16 : 0,
                        shadowColor: '#000',
                        shadowOffset: { width: 0, height: 2 },
                        shadowOpacity: 0.1,
                        shadowRadius: 8,
                        elevation: 4,
                      }}
                      onPress={() => handleNavigateToDetail(post)}
                    >
                      <Image
                        source={{ uri: post.image }}
                        className='w-full h-32'
                        resizeMode='cover'
                      />

                      <View className='p-4'>
                        {/* Date and Save Button */}
                        <View className='flex-row justify-between items-center mb-2'>
                          <View className='flex-row items-center'>
                            <Calendar size={12} color='#9CA3AF' />
                            <Text className='ml-1 text-xs text-gray-500'>
                              {post.date}
                            </Text>
                          </View>
                          <TouchableOpacity
                            onPress={() => handleToggleSave(post.id)}
                          >
                            <Bookmark
                              size={16}
                              color={isSaved ? '#3B82F6' : '#D1D5DB'}
                              fill={isSaved ? '#3B82F6' : 'none'}
                            />
                          </TouchableOpacity>
                        </View>

                        {/* Title */}
                        <Text
                          className='mb-2 text-sm font-bold leading-4 text-gray-800'
                          numberOfLines={2}
                        >
                          {post.title}
                        </Text>

                        {/* Doctor */}
                        <Text className='mb-3 text-xs font-medium text-blue-600'>
                          {post.author}
                        </Text>

                        {/* Tags */}
                        <View className='flex-row flex-wrap mb-3'>
                          {post.tags.slice(0, 2).map((tag, tagIndex) => (
                            <View
                              key={tagIndex}
                              className='px-2 py-1 mr-1 mb-1 bg-blue-50 rounded-full'
                            >
                              <Text className='text-xs font-medium text-blue-600'>
                                {tag}
                              </Text>
                            </View>
                          ))}
                        </View>

                        {/* Likes and Views */}
                        <View className='flex-row justify-between items-center'>
                          <TouchableOpacity
                            className='flex-row items-center'
                            onPress={() => handleToggleLike(post.id)}
                          >
                            <Heart
                              size={16}
                              color={isLiked ? '#EF4444' : '#9CA3AF'}
                              fill={isLiked ? '#EF4444' : 'none'}
                            />
                            <Text
                              className={`ml-1 text-xs font-medium ${
                                isLiked ? 'text-red-500' : 'text-gray-600'
                              }`}
                            >
                              {post.likes}
                            </Text>
                          </TouchableOpacity>

                          <View className='flex-row items-center'>
                            <Eye size={14} color='#9CA3AF' />
                            <Text className='ml-1 text-xs text-gray-500'>
                              {post.views}
                            </Text>
                          </View>
                        </View>
                      </View>
                    </TouchableOpacity>
                  );
                })}
              </View>
            )}
          </View>
        </ScrollView>
      </KeyboardAvoidingView>
    </SafeAreaView>
  );
}
